import argparse

import sys
import queue

task_queue = queue.Queue()
stop = False

def excute_task(bin_name, total_args):
    task_queue.put(bin_name + total_args)


def excute_xargs(command, args_num, process_num):
    while not stop:
        total_args = []
        for line in sys.stdin:
            total_args += line.split()
            if args_num == -1:
                excute_task(command, total_args)
                total_args = []
            elif len(total_args) >= args_num:
                for i in range(0, len(total_args), args_num):
                    excute_task(command, total_args[i:i+args_num])
                    total_args = []


def worker():
    while not stop:
        item = task_queue.get()
        import subprocess
        r = subprocess.Popen(item)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='xargs in python')
    parser.add_argument('x', metavar='X', type=str, nargs='+',
                        help='the argue')
    parser.add_argument('-n', type=int, dest='args_num', default=-1,
                        help='how many args')
    parser.add_argument('-P', type=int, dest='process_num', default=1,
                        help='process num run')

    args = parser.parse_args()
    print(args)
    from multiprocessing import pool

    pool = pool.ThreadPool(args.process_num)

    p1 = pool.Process(None, target=worker)
    p1.setDaemon(True)
    p2 = pool.Process(None, target=excute_xargs, args=(args.x, args.args_num, args.process_num))
    p2.setDaemon(True)
    p1.start()
    p2.start()
    while True:
        pass
